#!/usr/bin/env bash
set -euo pipefail

# --- 0) Tiny helpers ---------------------------------------------------------
log(){ printf ">> %s\n" "$*"; }

# --- 1) System deps (quiet, minimal) -----------------------------------------
if ! command -v gh >/dev/null 2>&1; then
  log "Installing GitHub CLI"
  sudo mkdir -p /etc/apt/keyrings
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg >/dev/null
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" \
    | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
  sudo apt-get update -qq
  sudo apt-get install -y gh >/dev/null
fi

# (optional pretty output)
if ! command -v bat >/dev/null 2>&1 && command -v apt-get >/dev/null 2>&1; then
  sudo apt-get update -qq && sudo apt-get install -y bat >/dev/null || true
  command -v batcat >/dev/null 2>&1 && sudo ln -sf /usr/bin/batcat /usr/local/bin/bat || true
fi

# --- 2) Python venv + llm + providers ---------------------------------------
log "Setting up llm CLI"
if [ ! -d "$HOME/.llm-env" ]; then
  python3 -m venv "$HOME/.llm-env"
fi
# shellcheck disable=SC1091
source "$HOME/.llm-env/bin/activate"
python3 -m pip -q install --upgrade pip llm llm-anthropic llm-gemini

# Ensure llm is on PATH for all shells
if ! grep -q 'source ~/.llm-env/bin/activate' "$HOME/.bashrc" 2>/dev/null; then
  echo 'source ~/.llm-env/bin/activate' >> "$HOME/.bashrc"
fi

# --- 3) Keys from Codex secrets (if present) ---------------------------------
# Expected secrets: OPENAI_API_KEY, GOOGLE_API_KEY, ANTHROPIC_API_KEY
[ -n "${OPENAI_API_KEY:-}" ]    && llm keys set openai    --value "$OPENAI_API_KEY"    || true
[ -n "${GOOGLE_API_KEY:-}" ]    && llm keys set google    --value "$GOOGLE_API_KEY"    || true
[ -n "${GOOGLE_API_KEY:-}" ]    && llm keys set gemini    --value "$GOOGLE_API_KEY"    || true   # <— added; harmless + helps
[ -n "${ANTHROPIC_API_KEY:-}" ] && llm keys set anthropic --value "$ANTHROPIC_API_KEY" || true

# --- 4) Review script ---------------------------------------------------------
# Pull the latest review CLI (light wrapper around git diff + llm)
if [ ! -x /usr/local/bin/review-core ]; then
  sudo curl -fsSL https://raw.githubusercontent.com/ole-vi/ai-code-review/main/review -o /usr/local/bin/review-core
  sudo chmod +x /usr/local/bin/review-core
fi

# Wrap it so "review master...HEAD" always uses all 3 models
sudo tee /usr/local/bin/review >/dev/null <<'SH'
#!/usr/bin/env bash
set -euo pipefail
# If --models not provided, use LLM_MODELS or our default trio
want_models=""
for arg in "$@"; do
  if [ "$arg" = "--models" ]; then want_models="set"; break; fi
done
if [ -z "${want_models}" ]; then
  MODELS="${LLM_MODELS:-gpt-4o,gemini-2.0-flash,anthropic/claude-3-7-sonnet-latest}"  # <— changed
  exec /usr/local/bin/review-core --models "$MODELS" "$@"
else
  exec /usr/local/bin/review-core "$@"
fi
SH
sudo chmod +x /usr/local/bin/review

# --- 5) Persist model list for all future shells -----------------------------
if ! grep -q 'export LLM_MODELS=' "$HOME/.bashrc" 2>/dev/null; then
  echo 'export LLM_MODELS="gpt-4o,gemini-2.0-flash,anthropic/claude-3-7-sonnet-latest"' >> "$HOME/.bashrc"  # <— changed
fi

log "Done. After startup, run:  review master...HEAD"


