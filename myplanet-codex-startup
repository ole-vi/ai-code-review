#!/usr/bin/env bash
set -euo pipefail

REPO="open-learning-exchange/myplanet"
WORKDIR="/workspace/myplanet"
TOOLS="commandlinetools-linux-13114758_latest.zip"

# --- 1) Android SDK tools -----------------------------------------------------
wget -qO android-commandlinetools.zip "https://dl.google.com/android/repository/${TOOLS}"
mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
unzip -q android-commandlinetools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
rm -f android-commandlinetools.zip
ln -s "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/"* /usr/local/bin/
bash -c 'yes | sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"'
bash -c 'yes | sdkmanager --licenses'
sdkmanager --version

# --- 2) GitHub CLI ------------------------------------------------------------
if ! command -v gh >/dev/null 2>&1; then
  sudo mkdir -p /etc/apt/keyrings
  curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg \
    | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg >/dev/null
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] \
    https://cli.github.com/packages stable main" \
    | sudo tee /etc/apt/sources.list.d/github-cli.list >/dev/null
  sudo apt-get update -qq
  sudo apt-get install -y gh >/dev/null
fi

# --- 3) Git remotes -----------------------------------------------------------
if [ -d "${WORKDIR}" ]; then
  cd "${WORKDIR}"
  git remote set-url origin "https://github.com/${REPO}.git" 2>/dev/null || \
  git remote add origin "https://github.com/${REPO}.git"
  gh repo set-default "${REPO}" || true
  cd -
fi

# --- 4) Python venv + llm -----------------------------------------------------
if [ ! -d "$HOME/.llm-env" ]; then
  python3 -m venv "$HOME/.llm-env"
fi
# shellcheck disable=SC1091
source "$HOME/.llm-env/bin/activate"
python3 -m pip -q install --upgrade pip llm llm-anthropic llm-gemini

# Auto-activate venv in future shells
if ! grep -q 'source ~/.llm-env/bin/activate' "$HOME/.bashrc" 2>/dev/null; then
  echo 'source ~/.llm-env/bin/activate' >> "$HOME/.bashrc"
fi

# --- 5) Keys from Codex secrets -----------------------------------------------
[ -n "${OPENAI_API_KEY:-}" ]    && llm keys set openai    --value "$OPENAI_API_KEY"    || true
[ -n "${GOOGLE_API_KEY:-}" ]    && llm keys set gemini    --value "$GOOGLE_API_KEY"    || true
[ -n "${ANTHROPIC_API_KEY:-}" ] && llm keys set anthropic --value "$ANTHROPIC_API_KEY" || true

# --- 6) Review script ---------------------------------------------------------
if [ ! -x /usr/local/bin/review-core ]; then
  sudo curl -fsSL https://raw.githubusercontent.com/ole-vi/ai-code-review/main/review \
    -o /usr/local/bin/review-core
  sudo chmod +x /usr/local/bin/review-core
fi

sudo tee /usr/local/bin/review >/dev/null <<'SH'
#!/usr/bin/env bash
set -euo pipefail
if [[ ! " $* " =~ " --models " ]]; then
  MODELS="${LLM_MODELS:-gpt-4o,gemini/gemini-1.5-flash-latest,anthropic/claude-3-7-sonnet-latest}"
  exec /usr/local/bin/review-core --models "$MODELS" "$@"
else
  exec /usr/local/bin/review-core "$@"
fi
SH
sudo chmod +x /usr/local/bin/review

# --- 7) Persist default models ------------------------------------------------
if ! grep -q 'export LLM_MODELS=' "$HOME/.bashrc" 2>/dev/null; then
  echo 'export LLM_MODELS="gpt-4o,gemini/gemini-1.5-flash-latest,anthropic/claude-3-7-sonnet-latest"' >> "$HOME/.bashrc"
fi

echo "âœ… Android SDK + GitHub CLI + LLM review setup complete."
echo "Run inside repo:  review master...HEAD"
